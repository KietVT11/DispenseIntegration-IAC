{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"_artifactsLocation": {
			"type": "string"
		},
		"_artifactsLocationSasToken": {
			"type": "securestring"
		},
		"sqlServerName": {
			"type": "string"
		},
		"dispenseIntegrationDatabasesNames": {
			"type": "array",
			"defaultValue": [],
			"metadata": {
				"description": "The SQL Databases names."
			}
		},
		"sqlCollation": {
			"type": "string",
			"defaultValue": "SQL_Latin1_General_Cp1_CI_AS",
			"allowedValues": [
				"SQL_Latin1_General_Cp437_CS_AS",
				"SQL_Latin1_General_Cp437_CI_AS",
				"SQL_Latin1_General_Pref_Cp437_CI_AS",
				"SQL_Latin1_General_Cp437_CI_AI",
				"SQL_Latin1_General_Cp437_BIN",
				"SQL_Latin1_General_Cp850_BIN",
				"SQL_Latin1_General_Cp850_CS_AS",
				"SQL_Latin1_General_Cp850_CI_AS",
				"SQL_Latin1_General_Cp850_CI_AI",
				"SQL_Latin1_General_Pref_Cp850_CI_AS",
				"SQL_1xCompat_Cp850_CI_AS",
				"SQL_Latin1_General_Cp1_CS_AS",
				"SQL_Latin1_General_Cp1_CI_AS",
				"SQL_Latin1_General_Pref_Cp1_CI_AS",
				"SQL_Latin1_General_Cp1_CI_AI",
				"SQL_AltDiction_Cp850_CS_AS",
				"SQL_AltDiction_Pref_Cp850_CI_AS",
				"SQL_AltDiction_Cp850_CI_AI",
				"SQL_Scandainavian_Pref_Cp850_CI_AS",
				"SQL_Scandainavian_Cp850_CS_AS",
				"SQL_Scandainavian_Cp850_CI_AS",
				"SQL_AltDiction_Cp850_CI_AS",
				"SQL_Latin1_General_1250_BIN",
				"SQL_Latin1_General_Cp1250_CS_AS",
				"SQL_Latin1_General_Cp1250_CI_AS",
				"SQL_Czech_Cp1250_CS_AS",
				"SQL_Czech_Cp1250_CI_AS",
				"SQL_Hungarian_Cp1250_CS_AS",
				"SQL_Hungarian_Cp1250_CI_AS",
				"SQL_Polish_Cp1250_CS_AS",
				"SQL_Polish_Cp1250_CI_AS",
				"SQL_Romanian_Cp1250_CS_AS",
				"SQL_Romanian_Cp1250_CI_AS",
				"SQL_Croatian_Cp1250_CS_AS",
				"SQL_Croatian_Cp1250_CI_AS",
				"SQL_Slovak_Cp1250_CS_AS",
				"SQL_Slovak_Cp1250_CI_AS",
				"SQL_Slovenian_Cp1250_CS_AS",
				"SQL_Slovenian_Cp1250_CI_AS",
				"SQL_Latin1_General_1251_BIN",
				"SQL_Latin1_General_Cp1251_CS_AS",
				"SQL_Latin1_General_Cp1251_CI_AS",
				"SQL_Ukrainian_Cp1251_CS_AS",
				"SQL_Ukrainian_Cp1251_CI_AS",
				"SQL_Latin1_General_1253_BIN",
				"SQL_Latin1_General_Cp1253_CS_AS",
				"SQL_Latin1_General_Cp1253_CI_AS",
				"SQL_Latin1_General_Cp1253_CI_AI",
				"SQL_Latin1_General_1254_BIN",
				"SQL_Latin1_General_Cp1254_CS_AS",
				"SQL_Latin1_General_Cp1254_CI_AS",
				"SQL_Latin1_General_1255_BIN",
				"SQL_Latin1_General_Cp1255_CS_AS",
				"SQL_Latin1_General_Cp1255_CI_AS",
				"SQL_Latin1_General_1256_BIN",
				"SQL_Latin1_General_Cp1256_CS_AS",
				"SQL_Latin1_General_Cp1256_CI_AS",
				"SQL_Latin1_General_1257_BIN",
				"SQL_Latin1_General_Cp1257_CS_AS",
				"SQL_Latin1_General_Cp1257_CI_AS",
				"SQL_Estonian_Cp1257_CS_AS",
				"SQL_Estonian_Cp1257_CI_AS",
				"SQL_Latvian_Cp1257_CS_AS",
				"SQL_Latvian_Cp1257_CI_AS",
				"SQL_Lithuanian_Cp1257_CS_AS",
				"SQL_Lithuanian_Cp1257_CI_AS",
				"SQL_Danish_Pref_Cp1_CI_AS",
				"SQL_SwedishPhone_Pref_Cp1_CI_AS",
				"SQL_SwedishStd_Pref_Cp1_CI_AS",
				"SQL_Icelandic_Pref_Cp1_CI_AS"
			],
			"metadata": {
				"description": "Database collation. (case sensative)"
			}
		},

		"sqlEnableATP": {
			"defaultValue": false,
			"type": "bool"
		},
		"keyVaultName": {
			"type": "string"
		},
		"sqlUserSecretName": {
			"type": "string"
		},

		"sqlPassSecretName": {
			"type": "string"
		},
		"appInsightName": {
			"type": "string"
		},
		"appServicePlanEnvironment": {
			"type": "string",
			"defaultValue": ""
		},
		"appServicePlanName": {
			"type": "string"
		},
		"appServicePlanSku": {
			"type": "string",
			"defaultValue": "Free",
			"allowedValues": [
				"Free",
				"Basic",
				"Shared",
				"Standard",
				"Premium"
			],
			"metadata": {
				"description": "Describes plan's pricing tier and instance size"
			}
		},
		"appServicePlanSkuCode": {
			"type": "string",
			"defaultValue": "F1",
			"allowedValues": [
				"F1",
				"D1",
				"B1",
				"B2",
				"B3",
				"S1",
				"S2",
				"S3",
				"P1",
				"P2",
				"P3",
				"P4"
			],
			"metadata": {
				"description": "Describes plan's pricing tier and instance size"
			}
		},
		"appServicePlanWorkerSize": {
			"type": "string",
			"defaultValue": "0",
			"allowedValues": [
				"0",
				"1",
				"2"
			],
			"metadata": {
				"description": "Size of app service worker"
			}
		},
		"appServiceScaleOutInstanceCount": {
			"type": "int",
			"defaultValue": 1
		},
		"autoscaleEnabled": {
			"type": "bool",
			"defaultValue": false,
			"metadata": {
				"description": "A boolean to indicate whether the autoscale policy is enabled or disabled."
			}
		},
		"changePercentScaleIn": {
			"type": "int",
			"defaultValue": 10,
			"metadata": {
				"description": "The percentage to decrease the instance count when autoscale engine is initiating scale in action."
			}
		},
		"changePercentScaleOut": {
			"type": "int",
			"defaultValue": 20,
			"metadata": {
				"description": "The percentage to increase the instance count when autoscale engine is initiating scale out action."
			}
		},
		"defaultCapacity": {
			"type": "int",
			"defaultValue": 5,
			"metadata": {
				"description": "The default capacity.  Autoscale engine will preventively set the instance count to be this value if it can not find any metric data."
			}
		},
		"deploymentSlots": {
			"defaultValue": [],
			"type": "array",
			"metadata": {
				"description": "Array with the names for the environment slots"
			},
			"maxLength": 19
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]"
		},
		"maximumCapacity": {
			"type": "int",
			"defaultValue": 5,
			"metadata": {
				"description": "The maximum capacity.  Autoscale engine will ensure the instance count is not greater than this value."
			}
		},
		"metricName": {
			"type": "string",
			"defaultValue": "CpuPercentage",
			"metadata": {
				"description": "The metric name."
			}
		},
		"metricThresholdToScaleIn": {
			"type": "int",
			"defaultValue": 20,
			"metadata": {
				"description": "The metric lower threshold.  If the metric value is below this threshold then autoscale engine will initiate scale in action."
			}
		},
		"metricThresholdToScaleOut": {
			"type": "int",
			"defaultValue": 60,
			"metadata": {
				"description": "The metric upper threshold.  If the metric value is above this threshold then autoscale engine will initiate scale out action."
			}
		},
		"minimumCapacity": {
			"defaultValue": 2,
			"metadata": {
				"description": "The minimum capacity.  Autoscale engine will ensure the instance count is at least this value."
			},
			"type": "int"
		},
		"webAppName": {
			"type": "string"
		}
	},
	"resources": [
		{
			"apiVersion": "2016-09-01",
			"name": "[variables('serverFarmDeployment')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('_artifactsLocation'), '/', variables('nestedTemplateFolder'), '/', variables('serverFarmsTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"hostingPlanName": { "value": "[parameters('appServicePlanName')]" },
					"hostingEnvironment": { "value": "[parameters('appServicePlanEnvironment')]" },
					"sku": { "value": "[parameters('appServicePlanSku')]" },
					"skuCode": { "value": "[parameters('appServicePlanSkuCode')]" },
					"workerSize": { "value": "[parameters('appServicePlanWorkerSize')]" },
					"location": { "value": "[parameters('location')]" }
				}
			},
			"type": "Microsoft.Resources/deployments"
		},
		{
			"apiVersion": "2016-09-01",
			"dependsOn": [
				"[resourceId('Microsoft.Resources/deployments', variables('serverFarmDeployment'))]",
				"[resourceId('Microsoft.Resources/deployments', variables('appInsightsDeployment'))]"
			],
			"name": "[variables('webAppDeployment')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('_artifactsLocation'), '/', variables('nestedTemplateFolder'), '/', variables('webAppsTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"hostingPlanName": { "value": "[parameters('appServicePlanName')]" },
					"hostingEnvironment": { "value": "[parameters('appServicePlanEnvironment')]" },
					"name": { "value": "[parameters('webAppName')]" },
					"location": { "value": "[parameters('location')]" },
					"appInsightName": { "value": "[parameters('appInsightName')]" }
				}
			},
			"type": "Microsoft.Resources/deployments"
		},
		{
			"apiVersion": "2016-09-01",
			"dependsOn": [
				"[resourceId('Microsoft.Resources/deployments', variables('serverFarmDeployment'))]"
			],
			"name": "[variables('appInsightsDeployment')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('_artifactsLocation'), '/', variables('nestedTemplateFolder'), '/', variables('appInsightsTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"name": { "value": "[parameters('appInsightName')]" }
				}
			},
			"type": "Microsoft.Resources/deployments"
		},
		{
			"apiVersion": "2016-09-01",
			"condition": "[greater(length(parameters('deploymentSlots')), 0)]",
			"dependsOn": [
				"[resourceId('Microsoft.Resources/deployments', variables('webAppDeployment'))]"
			],
			"name": "[variables('slotsDeployment')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('_artifactsLocation'), '/', variables('nestedTemplateFolder'), '/', variables('deploymentSlotTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"hostingPlanName": { "value": "[parameters('appServicePlanName')]" },
					"webAppName": { "value": "[parameters('webAppName')]" },
					"slots": { "value": "[parameters('deploymentSlots')]" },
					"location": { "value": "[parameters('location')]" }
				}
			},
			"type": "Microsoft.Resources/deployments"
		},
		{
			"apiVersion": "2016-09-01",
			"dependsOn": [
				"[resourceId('Microsoft.Resources/deployments', variables('serverFarmDeployment'))]"
			],
			"name": "[variables('autoScaleSettingsDeployment')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('_artifactsLocation'), '/', variables('nestedTemplateFolder'), '/', variables('autoScaleSettingTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"hostingPlanName": { "value": "[parameters('appServicePlanName')]" },
					"minimumCapacity": { "value": "[parameters('minimumCapacity')]" },
					"maximumCapacity": { "value": "[parameters('maximumCapacity')]" },
					"defaultCapacity": { "value": "[parameters('defaultCapacity')]" },
					"metricName": { "value": "[parameters('metricName')]" },
					"metricThresholdToScaleOut": { "value": "[parameters('metricThresholdToScaleOut')]" },
					"metricThresholdToScaleIn": { "value": "[parameters('metricThresholdToScaleIn')]" },
					"changePercentScaleOut": { "value": "[parameters('changePercentScaleOut')]" },
					"changePercentScaleIn": { "value": "[parameters('changePercentScaleIn')]" },
					"autoscaleEnabled": { "value": "[parameters('autoscaleEnabled')]" },
					"location": { "value": "[parameters('location')]" }
				}
			},
			"type": "Microsoft.Resources/deployments"
		},
		{
			"name": "[variables('productionAlertDeployment')]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2016-09-01",
			"dependsOn": [
				"[resourceId('Microsoft.Resources/deployments', variables('appInsightsDeployment'))]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('_artifactsLocation'), '/', variables('nestedTemplateFolder'), '/', variables('logAlertTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"alertName": { "value": "[variables('productionAlert').AlertName]" },
					"alertDescription": { "value": "[variables('productionAlert').AlertDescription]" },
					"alertSourceQuery": { "value": "[variables('productionAlert').AlertSourceQuery]" },
					"appInsightName": { "value": "[variables('productionAlert').AppInsightName]" },
					"actionGroupResourceGroupName": { "value": "[variables('productionAlert').ActionGroupResourceGroupName]" },
					"actionGroupName": { "value": "[variables('productionAlert').ActionGroupName]" },
					"emailSubject": { "value": "[variables('productionAlert').EmailSubject]" }
				}
			}
		},
		{
			"name": "[variables('stagingAlertDeployment')]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2016-09-01",
			"dependsOn": [
				"[resourceId('Microsoft.Resources/deployments', variables('appInsightsDeployment'))]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('_artifactsLocation'), '/', variables('nestedTemplateFolder'), '/', variables('logAlertTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"alertName": { "value": "[variables('stagingAlert').AlertName]" },
					"alertDescription": { "value": "[variables('stagingAlert').AlertDescription]" },
					"alertSourceQuery": { "value": "[variables('stagingAlert').AlertSourceQuery]" },
					"appInsightName": { "value": "[variables('stagingAlert').AppInsightName]" },
					"actionGroupResourceGroupName": { "value": "[variables('stagingAlert').ActionGroupResourceGroupName]" },
					"actionGroupName": { "value": "[variables('stagingAlert').ActionGroupName]" },
					"emailSubject": { "value": "[variables('stagingAlert').EmailSubject]" }
				}
			}
		},
		{
			"name": "[variables('nestedDeploymentNameSqlServer')]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2016-09-01",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('_artifactsLocation'), '/', variables('nestedTemplateFolder'), '/', variables('sqlServerTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"administratorLogin": {
						"reference": {
							"keyVault": {
								"id": "[resourceId(subscription().subscriptionId,  resourceGroup().name, 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
							},
							"secretName": "[parameters('sqlUserSecretName')]"
						}
					},
					"administratorLoginPassword": {
						"reference": {
							"keyVault": {
								"id": "[resourceId(subscription().subscriptionId,  resourceGroup().name, 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
							},
							"secretName": "[parameters('sqlPassSecretName')]"
						}
					},
					"location": { "value": "[parameters('location')]" },
					"serverName": { "value": "[parameters('sqlServerName')]" },
					"enableATP": { "value": "[parameters('sqlEnableATP')]" }
				}
			}
		},
		{
			"name": "[variables('nestedDeploymentNameSqlDatabaseDispenseIntegration')]",
			"condition": "[greater(length(parameters('dispenseIntegrationDatabasesNames')), 0)]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2016-09-01",
			"dependsOn": [
				"[resourceId('Microsoft.Resources/deployments', variables('nestedDeploymentNameSqlServer'))]"
			],
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[concat(parameters('_artifactsLocation'), '/', variables('nestedTemplateFolder'), '/', variables('sqlDatabaseTemplateFileName'), parameters('_artifactsLocationSasToken'))]",
					"contentVersion": "1.0.0.0"
				},
				"parameters": {
					"collation": { "value": "[parameters('sqlCollation')]" },
					"databasesNames": { "value": "[parameters('dispenseIntegrationDatabasesNames')]" },
					"location": { "value": "[parameters('location')]" },
					"serverName": { "value": "[parameters('sqlServerName')]" }
				}
			}
		}
	],
	"variables": {
		"nestedDeploymentNameSqlServer": "deploy-sqlserver",
		"nestedDeploymentNameSqlDatabaseDispenseIntegration": "deploy-dispenseintegration-sqldatabase",
		"serverFarmDeployment": "deploy-serverfarm",
		"webAppDeployment": "deploy-webapp",
		"appInsightsDeployment": "deploy-appinsights",
		"slotsDeployment": "deploy-slots",
		"autoScaleSettingsDeployment": "deploy-autoscale",
		"productionAlertDeployment": "deploy-production-alert",
		"stagingAlertDeployment": "deploy-staging-alert",

		"nestedTemplateFolder": "nestedtemplates",
		"sqlServerTemplateFileName": "sqlServer.json",
		"sqlDatabaseTemplateFileName": "sqlDatabaseWithoutElasticPool.json",
		"elasticPoolTemplateFileName": "elasticPool.json",
		"serverFarmsTemplateFileName": "serverFarms.json",
		"webAppsTemplateFileName": "webApps.json",
		"appInsightsTemplateFileName": "appInsights.json",
		"deploymentSlotTemplateFileName": "deploymentSlots.json",
		"autoScaleSettingTemplateFileName": "autoscaleSettings.json",
		"logAlertTemplateFileName": "appInsightLogAlert.json",

		"productionAlert": {
			"AlertName": "Dispense Integration Production error",
			"AlertDescription": "Please check detail for dispense integration production error",
			"AlertSourceQuery": "exceptions| where severityLevel == 3 and customDimensions.AspNetCoreEnvironment == \"Production\"",
			"AppInsightName": "[parameters('appInsightName')]",
			"ActionGroupResourceGroupName": "common-rg",
			"ActionGroupName": "Masuda-Team",
			"EmailSubject": "Alert Notification \"Webstercare Azure Service Error\" raised for \"dispense-integration-api\""
		},
		"stagingAlert": {
			"AlertName": "Dispense Integration Staging error",
			"AlertDescription": "Please check detail for dispense-integration staging error",
			"AlertSourceQuery": "exceptions| where severityLevel == 3 and customDimensions.AspNetCoreEnvironment == \"Staging\"",
			"AppInsightName": "[parameters('appInsightName')]",
			"ActionGroupResourceGroupName": "common-rg",
			"ActionGroupName": "Masuda-Team",
			"EmailSubject": "Alert Notification \"Webstercare Azure Service Error\" raised for \"dispense-integration-api/staging\""
		}
	}
}